import{au as l,al as n,af as r,av as g,aw as w,ax as f,ay as p,az as u,aA as m}from"./index-D-diXoG2.js";class C extends l{async authenticateUser(){var e;if(!this.provider||!((e=this.chainConfig)!==null&&e!==void 0&&e.chainId))throw n.notConnectedError();const{chainNamespace:i,chainId:c}=this.chainConfig;if(this.status!==r.CONNECTED)throw n.notConnectedError("Not connected with wallet, Please login/connect first");const t=await this.provider.request({method:"eth_accounts"});if(t&&t.length>0){const a=g(t[0],this.name);if(a&&!w(a))return{idToken:a};const h={domain:window.location.origin,uri:window.location.href,address:t[0],chainId:parseInt(c,16),version:"1",nonce:Math.random().toString(36).slice(2),issuedAt:new Date().toISOString()},s=await f(h,i),d=await this.provider.request({method:"personal_sign",params:[s,t[0]]}),o=await p(i,d,s,this.name,this.sessionTime);return u(t[0],this.name,o),{idToken:o}}throw n.notConnectedError("Not connected with wallet, Please login/connect first")}async disconnect(){if(this.status!==r.CONNECTED)throw n.disconnectionError("Not connected with wallet");const e=await this.provider.request({method:"eth_accounts"});e&&e.length>0&&m(e[0],this.name)}}export{C as B};
